openapi: "3.0.0"
info:
  title: Lazychef
  version: 1.0.0
  description: Lazychef API
paths:
#  users API
  /users:
    get:
      operationId: getUsersList
      description: Get users list
      responses:
        '200':
          description: Users list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersList'
    post:
      operationId: createUser
      description: Create user
      requestBody:
        description: User details to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
  /users/{id}:
    get:
      operationId: getUserDetails
      description: Get user details
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      operationId: deleteUser
      description: Delete user
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: User deleted
#  food API
  /food:
    get:
      operationId: getFoodList
      description: Get food list
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoodList'


#  order API

#  order-food API

components:
  schemas:
    User:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
        firstName:
          type: string
        secondName:
          type: string
        role:
          $ref: '#/components/schemas/Role'
    UsersList:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
    Role:
      type: string
      enum:
        - OWNER
        - COOK
        - WAITER
#  FOOD
    Food:
      type: object
      properties:
        id:
          type: integer
        cost:
          type: number
        name:
          type: string
        type:
          $ref: '#/components/schemas/FoodType'
    FoodList:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/Food'
    FoodType:
      type: string
      enum:
        - DRINK
        - DISH